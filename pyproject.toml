[project]
name = "audio2anki"
version = "0.1.0"
description = "Convert audio and video files into Anki flashcard decks with translations"
authors = [{ name = "Oliver Steele", email = "steele@osteele.com" }]
dependencies = [
    "click>=8.1.7",
    "httpx>=0.26.0", # For Eleven Labs API
    "rich>=13.7.0",
    "openai>=1.8.0",
    "pydub>=0.25.1",
    "deepl>=1.16.1",
    "gradio-client>=0.10.1",
    "tomli-w>=1.2.0",
    "librosa",
    "soundfile",
    "numpy",
]

requires-python = ">=3.10,<3.13"
# 3.13 removes the aifc and sunau modules.
# librosa depends on audioread which uses these.
# https://github.com/beetbox/audioread/issues/144

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/audio2anki"]

[tool.hatch.build.targets.sdist]
include = [
    "src/audio2anki",
]

[tool.hatch.build]
include = ["src/audio2anki/resources/*"]

[dependency-groups]
dev = [
    "ruff>=0.1.9",
    "pytest>=7.4.4",
    "pydub-stubs>=0.25.1.5",
    "pyright>=1.1.396",
]

[tool.ruff]
line-length = 120
target-version = "py310"
src = ["src"]
extend-include = ["*.pyi"]
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["audio2anki"]

[tool.pyright]
reportIncompatibleMethodOverride = "none"
reportPrivateUsage = "warning"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownParameterType = "warning"
reportUnknownVariableType = "warning"
reportMissingParameterType = "warning"
pythonVersion = "3.11"
pythonPlatform = "Darwin"
reportMissingTypeStubs = false
useLibraryCodeForTypes = true
stubPath = "stubs"
executionEnvironments = [
    { root = "tests", extraPaths = ["src"], reportPrivateUsage = false, reportMissingImports = false, reportUnknownVariableType = false, reportUnknownParameterType = false }
]

[project.scripts]
audio2anki = "audio2anki.main:main"

[tool.pytest.ini_options]
addopts = "-ra -q"
filterwarnings = [
    "ignore:'audioop' is deprecated:DeprecationWarning",
    'ignore:invalid escape sequence.*:DeprecationWarning',
    "ignore:websockets.legacy is deprecated:DeprecationWarning",
]
